# ------------------------------------------------------------------------------------------------------------ #
# Author(s)    : Peter Klapwijk - www.InTheCloud247.com 	                                       		       #
# Version      : 1.0                                                                                           #
#                                                                                                              #
# Description  : Enforce a first initial Windows Defender update                                               #
#                                                                                                              #
#                After a successful Windows Autopilot deployment the Antimalware version is outdated or        #
#                sometimes Windows Defender real-time protection is turned off. To fix this a Defender         #
#                update is required. This script performs an Windows Defender update.                          #
#                                                                                                              #
# Changes      : v1.0 20250401 - Initial version (Peter Klapwijk)     		                       		       # 
#                                                                                                              #                     
#------------------------------------------------------------------------------------------------------------- #

# Microsoft Intune Management Extension might start a 32-bit PowerShell instance. If so, restart as 64-bit PowerShell
If ($ENV:PROCESSOR_ARCHITEW6432 -eq "AMD64") {
    Try {
        &"$ENV:WINDIR\SysNative\WindowsPowershell\v1.0\PowerShell.exe" -File $PSCOMMANDPATH
    }
    Catch {
        Throw "Failed to start $PSCOMMANDPATH"
    }
    Exit
}


#region Functions
Function CleanUpAndExit() {
    Param(
        [Parameter(Mandatory=$True)][String]$ErrorLevel
    )

    # Write results to registry for Intune Detection (change company name to your needs)
    $Key = "HKEY_LOCAL_MACHINE\Software\Klapwijk\WindowsDefenderUpdate\v1.0"
    $NOW = Get-Date -Format "yyyyMMdd-hhmmss"

    If ($ErrorLevel -eq "0") {
        [microsoft.win32.registry]::SetValue($Key, "Success", $NOW)
    } else {
        [microsoft.win32.registry]::SetValue($Key, "Failure", $NOW)
        [microsoft.win32.registry]::SetValue($Key, "Error Code", $Errorlevel)
    }
    
    # Exit Script with the specified ErrorLevel
    Stop-Transcript | Out-Null
    EXIT $ErrorLevel
}
#endregion Functions


# Start Transcript
$Transcript = "C:\programdata\Microsoft\IntuneManagementExtension\Logs\$($(Split-Path $PSCommandPath -Leaf).ToLower().Replace(".ps1",".log"))"
Start-Transcript -Path $Transcript | Out-Null


# Get current Windows Defender Status
Write-Output "Get current Windows Defender Status:"
Get-MpComputerStatus | FL AMEngineVersion,AMProductVersion,AntivirusSignatureLastUpdated,RealTimeProtectionEnabled

# Microsoft Antimalware Service Command Line Utility
$MpCmdRun = "C:\Program Files\Windows Defender\MpCmdRun.exe"
If (Test-Path $MpCmdRun -PathType Leaf) {

    Write-Output "Force Windows Defender Update"
    $UpdateResult = & $MpCmdRun -SignatureUpdate -MMPC
    Write-Output $UpdateResult 

} Else {

    Write-Output "Cannot find the Microsoft Antimalware Service Command Line Utility: $MpCmdRun"
}

# Get updated Windows Defender Status
Write-Output "Get updated Windows Defender Status:"
Get-MpComputerStatus | FL AMEngineVersion,AMProductVersion,AntivirusSignatureLastUpdated,RealTimeProtectionEnabled

CleanUpAndExit -ErrorLevel 0